# -*- coding: utf-8 -*-
"""
agentframework.py 2.0

Copyright (c) School of Geography.
University of Leeds, Leeds, West Yorkshire, UK, LS2 9JT.


Created on Wed Nov 29 19:08:57 2017

@author: Ourania Sermpezi
"""

#agentframework.py

import random


# Creating a class to randomise the coordinates of the agents.
class Agent():
    # Overriding the __init__ method to take in the list 'environment'.
    
    def __init__(self, environment):
        self._x = random.randint(0, 99)
        self._y = random.randint(0, 99)
        self.environment = environment
        self.store = 0
    
    
    # Setting up an accessor method, so that 'x' cannot be accidentally changed.
    
    def getx(self):
        return self._x
    
    
    # Setting up a mutator method, so that 'x' cannot be accidentally changed.
    
    def setx(self, value):
        self._x = value
    
    
    # Setting up a method that deletes 'x'.
    
    def delx(self):
        del self._x
    
    
    # Setting up an accessor method, so that 'y' cannot be accidentally changed.
    
    def gety(self):
        return self._y
    
    
     # Setting up a mutator method, so that 'y' cannot be accidentally changed.
     
    def sety(self, value):
        self._y = value
    
    
    # Setting up a method that deletes 'y'
    
    def dely(self):
        del self._y
    
    
    # Setting up the property for the accessor and mutator methods.
    
    x = property(getx, setx, delx)
    
    y = property(gety, sety, dely)
    
    
    # Setting up a method that moves the agents by one step.
    
    def move(self):
        if random.random() < 0.5:
            self._y = (self._y + 1) % 100
        else:
            self._y = (self._y - 1) % 100

        if random.random() < 0.5:
            self._x = (self._x + 1) % 100
        else:
            self._x = (self._x - 1) % 100

    
    # Setting up a method so that the agents eat part of the environment
    # and then store the food.
    
    def eat(self):
        if self.environment[self._y][self._x] > 10:
            self.environment[self._y][self._x] -= 10
            self.store += 10